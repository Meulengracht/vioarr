/**
 * Heimdall Environment Protocol
 * Defines the various services that together provide functionality for the
 * launcher environment service.
 */

namespace hd

enum context_type {
    INFO,
    WARNING,
    ERROR,
    CONFIRM,
    INPUT
};

enum buttons {
    NONE = 0,
    OK = 0x1,
    APPLY = 0x2
    CONFIRM = 0x4,
    INPUT = 0x8
};

service core (90) {
    /**
     * Notifications are asynchronous and do never block. Their responses come in form
     * of events from the heimdall server. Notifications support returning input, and thus
     * are capable of being interactive.
     */
    func notification(uint id, string content, buttons buttons) : () = 1;

    /**
     * Message-boxes are blocking calls that wait for the result of the message-box input. If
     * the type was input, then the input field will be filled with whatever the user entered. 
     */
    func message_box(string title, string body, context_type type, buttons buttons) : (buttons button, string input) = 2;
    
    /**
     * If a notification has buttons exposed like defined in <buttons>, then
     * the return value of that notification will come in form of either an
     * input event (if the notification had an input field) or it will come
     * as an response event (if the notification had any buttons).
     */
    event notification_input : (uint id, string input) = 3;
    event notification_response : (uint id, buttons button) = 4;
}
